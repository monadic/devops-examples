#!/bin/bash
# Creates ConfigHub units for sample workloads to analyze for cost optimization

set -e

if [ ! -f .cub-project ]; then
    echo "‚ùå Error: .cub-project file not found"
    echo "Please run bin/install-base first"
    exit 1
fi

PROJECT=$(cat .cub-project)
SPACE="${PROJECT}-base"

echo "üöÄ Installing sample workloads to ConfigHub..."
echo "Project: $PROJECT"
echo "Space: $SPACE"
echo ""

# Create workload units from YAML files
echo "Creating workload units..."

# Nginx (over-provisioned frontend)
cub unit create nginx-web confighub/workloads/nginx-deployment.yaml \
  --space $SPACE \
  --label app=nginx \
  --label tier=frontend \
  --label cost-category=compute \
  --label cost-analysis=enabled || true

echo "‚úÖ Created nginx-web unit (5 replicas, 500m CPU each = 2500m total)"

# Redis (memory-intensive cache)
cub unit create redis-cache confighub/workloads/redis-deployment.yaml \
  --space $SPACE \
  --label app=redis \
  --label tier=cache \
  --label cost-category=memory \
  --label cost-analysis=enabled || true

echo "‚úÖ Created redis-cache unit (3 replicas, 2Gi memory each = 6Gi total)"

# Postgres (database with storage)
cub unit create postgres-db confighub/workloads/postgres-deployment.yaml \
  --space $SPACE \
  --label app=postgres \
  --label tier=database \
  --label cost-category=storage \
  --label cost-analysis=enabled || true

echo "‚úÖ Created postgres-db unit (2 replicas, 1Gi memory + 500m CPU each)"

echo ""
echo "‚úÖ Sample workloads installed!"
echo ""
echo "View units in ConfigHub:"
echo "  cub unit list --space $SPACE"
echo ""
echo "You should see:"
echo "  nginx-web       - Frontend web server (5 replicas)"
echo "  redis-cache     - Cache layer (3 replicas)"
echo "  postgres-db     - Database (2 replicas)"
echo ""
echo "Next steps:"
echo "1. Run: bin/apply-workloads    # Deploy workloads to Kubernetes"
echo "2. Wait 2 minutes for metrics to collect"
echo "3. Run: ./cost-optimizer       # Analyze and generate recommendations"
echo ""
echo "Expected cost optimization recommendations:"
echo "  ‚Ä¢ nginx-web: Reduce replicas from 5 to 2-3 (low traffic)"
echo "  ‚Ä¢ redis-cache: Reduce memory from 2Gi to 1Gi per replica"
echo "  ‚Ä¢ postgres-db: Right-size CPU from 500m to 250m"
echo ""
echo "üí° These recommendations will be visible in:"
echo "  ‚Ä¢ Dashboard: http://localhost:8081/dashboard"
echo "  ‚Ä¢ CLI output with specific cub commands"
