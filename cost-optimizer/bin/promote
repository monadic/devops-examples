#!/bin/bash

# Promote cost-optimizer changes between environments using ConfigHub push-upgrade

set -e

if [ ! -e ".cub-project" ]; then
  echo "Run bin/install-base first to create the base configuration"
  exit 1
fi

project=$(cat .cub-project)
from=$1
to=$2

if [ -z "$from" ] || [ -z "$to" ]; then
  echo "Usage: bin/promote <from-env> <to-env>"
  echo ""
  echo "Examples:"
  echo "  bin/promote dev staging      # Promote from dev to staging"
  echo "  bin/promote staging prod     # Promote from staging to prod"
  echo ""
  echo "Available environments:"
  echo "  dev ‚Üí staging ‚Üí prod"
  exit 1
fi

from_space=$project-$from
to_space=$project-$to

echo "üîÑ Promoting cost-optimizer from $from to $to..."
echo "From: $from_space"
echo "To:   $to_space"
echo ""

# Verify spaces exist
echo "Verifying spaces exist..."
cub space get $from_space > /dev/null || { echo "‚ùå Source space $from_space does not exist"; exit 1; }
cub space get $to_space > /dev/null || { echo "‚ùå Target space $to_space does not exist"; exit 1; }

# Use push-upgrade pattern to promote changes
echo "Promoting changes using push-upgrade pattern..."

# Promote each unit from source to target using push-upgrade
for unit in namespace cost-optimizer-rbac cost-optimizer-deployment cost-optimizer-service cost-optimizer-config; do
  echo "  üì¶ Promoting $unit..."
  cub unit push-upgrade $unit --space $from_space || {
    echo "  ‚ö†Ô∏è  Warning: Could not promote $unit (may not have downstream units)"
  }
done

echo ""
echo "‚úÖ Promotion complete!"
echo ""
echo "Verify promotion results:"
echo "  cub unit list --space $to_space --show-status"
echo "  cub unit diff --space $from_space --compare-space $to_space"
echo ""
echo "Apply promoted changes to Kubernetes:"
echo "  bin/apply-all $to"
echo ""
echo "Check what changed:"
echo "  kubectl get events -n devops-apps --sort-by='.lastTimestamp'"